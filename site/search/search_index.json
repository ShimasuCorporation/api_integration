{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Shimasu Welcome to Shimasu developer documentation. Please check all the instructions to setup the project in your local enironment before doing anything. NOTE : You need to be registered to the organization before you can access the repository. Please contact us at authorize@shimasu.co for authorization. Table of Contents Setup Documentation API Documentation Credits The application is built by Utkarsh Dubey , Christian Barton Randall and WAUthethird. We are funded intially by WAUthethird, remember you owe him :P","title":"Welcome to Shimasu"},{"location":"#welcome-to-shimasu","text":"Welcome to Shimasu developer documentation. Please check all the instructions to setup the project in your local enironment before doing anything. NOTE : You need to be registered to the organization before you can access the repository. Please contact us at authorize@shimasu.co for authorization.","title":"Welcome to Shimasu"},{"location":"#table-of-contents","text":"Setup Documentation API Documentation","title":"Table of Contents"},{"location":"#credits","text":"The application is built by Utkarsh Dubey , Christian Barton Randall and WAUthethird. We are funded intially by WAUthethird, remember you owe him :P","title":"Credits"},{"location":"API/Introduction/","text":"Introduction The API is built on top of Django framework( v2.1 ) for Python 3. The API currently doesn't support token authentication but it is clear that it would do in very soon. Until token authentication is implemented the API is free to use and experiment with. The various API endpoints are listed below. Notice it would require the ID of the youtube video instead of the full url. The ID can be derived from the url itself. Just copy the part after youtube.com/watch?v=... before any ampersands(&). /api/get_transcript/<youtube_video_id> /api/get_suggestions/<youtube_video_id> The API returns data in JSON format. You can use Postman to tinker with the API. For more information about using Postman please read their documentation or this simple Tutorial .","title":"Introduction"},{"location":"API/Introduction/#introduction","text":"The API is built on top of Django framework( v2.1 ) for Python 3. The API currently doesn't support token authentication but it is clear that it would do in very soon. Until token authentication is implemented the API is free to use and experiment with. The various API endpoints are listed below. Notice it would require the ID of the youtube video instead of the full url. The ID can be derived from the url itself. Just copy the part after youtube.com/watch?v=... before any ampersands(&). /api/get_transcript/<youtube_video_id> /api/get_suggestions/<youtube_video_id> The API returns data in JSON format. You can use Postman to tinker with the API. For more information about using Postman please read their documentation or this simple Tutorial .","title":"Introduction"},{"location":"API/get_suggestion/","text":"Get Suggestions API Route The Get Suggestions API Route fetches the suggestions generated by the Artificial Intelligence Core with different useful keys. It can be used in the following endpoint. /api/get_suggestions/<youtube_video_id> Replace the <youtube_video_id> with the ID of an actual Youtube Video. The keys received in the JSON format are listed and explained below. { \"name\": ... \"type\": ... \"salience\": ... \"wiki\": ... } Name Type name The name of the entity type Type of the entity salience The salience of entity based on other factors wiki The wikipedia url for the entity Example 1 Here is an example of a Youtube Video. Its url is https://www.youtube.com/watch?v=LVV_93mBfSU where the id is LVV_93mBfSU . After putting it in the url /api/get_suggestions/<youtube_video_id> we get the following result in json. [ { \"name\": \"search engine\", \"type\": \"CONSUMER_GOOD\", \"salience\": 0.5258312821388245, \"wiki\": \"-\", \"mid\": \"-\" }, { \"name\": \"internet\", \"type\": \"OTHER\", \"salience\": 0.053129713982343674, \"wiki\": \"-\", \"mid\": \"-\" }, { \"name\": \"teams\", \"type\": \"ORGANIZATION\", \"salience\": 0.03659219294786453, \"wiki\": \"-\", \"mid\": \"-\" }, { \"name\": \"Mars\", \"type\": \"LOCATION\", \"salience\": 0.030541134998202324, \"wiki\": \"https://en.wikipedia.org/wiki/Mars\", \"mid\": \"/m/09cws\" }, { \"name\": \"name\", \"type\": \"OTHER\", \"salience\": 0.02764585241675377, \"wiki\": \"-\", \"mid\": \"-\" }, ... ]","title":"Get Suggestions API Route"},{"location":"API/get_suggestion/#get-suggestions-api-route","text":"The Get Suggestions API Route fetches the suggestions generated by the Artificial Intelligence Core with different useful keys. It can be used in the following endpoint. /api/get_suggestions/<youtube_video_id> Replace the <youtube_video_id> with the ID of an actual Youtube Video. The keys received in the JSON format are listed and explained below. { \"name\": ... \"type\": ... \"salience\": ... \"wiki\": ... } Name Type name The name of the entity type Type of the entity salience The salience of entity based on other factors wiki The wikipedia url for the entity","title":"Get Suggestions API Route"},{"location":"API/get_suggestion/#example-1","text":"Here is an example of a Youtube Video. Its url is https://www.youtube.com/watch?v=LVV_93mBfSU where the id is LVV_93mBfSU . After putting it in the url /api/get_suggestions/<youtube_video_id> we get the following result in json. [ { \"name\": \"search engine\", \"type\": \"CONSUMER_GOOD\", \"salience\": 0.5258312821388245, \"wiki\": \"-\", \"mid\": \"-\" }, { \"name\": \"internet\", \"type\": \"OTHER\", \"salience\": 0.053129713982343674, \"wiki\": \"-\", \"mid\": \"-\" }, { \"name\": \"teams\", \"type\": \"ORGANIZATION\", \"salience\": 0.03659219294786453, \"wiki\": \"-\", \"mid\": \"-\" }, { \"name\": \"Mars\", \"type\": \"LOCATION\", \"salience\": 0.030541134998202324, \"wiki\": \"https://en.wikipedia.org/wiki/Mars\", \"mid\": \"/m/09cws\" }, { \"name\": \"name\", \"type\": \"OTHER\", \"salience\": 0.02764585241675377, \"wiki\": \"-\", \"mid\": \"-\" }, ... ]","title":"Example 1"},{"location":"API/get_transcript/","text":"Get Transcript API Route The Get Transcript API Route gets the transcripts of a youtube video passed in as an argument inside the link. /api/get_transcript/<youtube_video_id> Replace the <youtube_video_id> with the ID of an actual Youtube Video. Example 1 Here is an example of a Youtube Video. Its url is https://www.youtube.com/watch?v=LVV_93mBfSU where the id is LVV_93mBfSU . After putting it in the url /api/get_transcript/<youtube_video_id>/ we get the following result in json. [ { \"text\": \"[Music]\", \"start\": 0.89, \"duration\": 3.15 }, { \"text\": \"hi my name is John I lead the search and\", \"start\": 5.24, \"duration\": 7.029 }, { \"text\": \"she learning teams at Google well I\", \"start\": 8.46, \"duration\": 5.969 }, { \"text\": \"think it's amazingly inspiring that\", \"start\": 12.269, \"duration\": 3.631 }, { \"text\": \"people all over the world\", \"start\": 14.429, \"duration\": 3.841 }, { \"text\": \"I turned to search engines to ask\", \"start\": 15.9, \"duration\": 3.9 }, { \"text\": \"trivial questions and incredibly\", \"start\": 18.27, \"duration\": 3.21 }, ... ]","title":"Get Transcript API Route"},{"location":"API/get_transcript/#get-transcript-api-route","text":"The Get Transcript API Route gets the transcripts of a youtube video passed in as an argument inside the link. /api/get_transcript/<youtube_video_id> Replace the <youtube_video_id> with the ID of an actual Youtube Video.","title":"Get Transcript API Route"},{"location":"API/get_transcript/#example-1","text":"Here is an example of a Youtube Video. Its url is https://www.youtube.com/watch?v=LVV_93mBfSU where the id is LVV_93mBfSU . After putting it in the url /api/get_transcript/<youtube_video_id>/ we get the following result in json. [ { \"text\": \"[Music]\", \"start\": 0.89, \"duration\": 3.15 }, { \"text\": \"hi my name is John I lead the search and\", \"start\": 5.24, \"duration\": 7.029 }, { \"text\": \"she learning teams at Google well I\", \"start\": 8.46, \"duration\": 5.969 }, { \"text\": \"think it's amazingly inspiring that\", \"start\": 12.269, \"duration\": 3.631 }, { \"text\": \"people all over the world\", \"start\": 14.429, \"duration\": 3.841 }, { \"text\": \"I turned to search engines to ask\", \"start\": 15.9, \"duration\": 3.9 }, { \"text\": \"trivial questions and incredibly\", \"start\": 18.27, \"duration\": 3.21 }, ... ]","title":"Example 1"}]}